
worker_processes 1;
error_log logs/error.log;

events {
    worker_connections 1024;
}

http {

    init_by_lua_file init.lua;

    server {

        listen 80;

        charset utf-8;
        charset_types application/json;
        default_type application/json;

        location /users/new {
            set $user_id $1;

            access_by_lua_block {

                ngx.req.read_body()
                local body = ngx.var.request_body
                local user = cjson.decode(body)
                local user_id = user["id"]
                db[user_id] = user
                ngx.say("{}")

            }

        }

        location ~ ^/users/([0-9]+)$ {
            set $user_id $1;

            if ($request_method = GET) {

                access_by_lua_block {

                    local user_id = tonumber(ngx.var.user_id)
                    local user = db[user_id]

                    if user then
                        ngx.say(cjson.encode(user))
                    else
                        ngx.say("no")
                    end

                }

            }

            if ($request_method = POST) {
                content_by_lua_block {
                    ngx.say(get_user(ngx.var.user_id))
                }
            }

        }

        location ~ ^/locations/([0-9]+)$ {
            set $location_id $1;
            content_by_lua_block {
                ngx.say(get_user(ngx.var.user_id))
            }
        }

        location ~ ^/locations/([0-9]+)$ {
            set $location_id $1;
            content_by_lua_block {
                ngx.say(get_user(ngx.var.user_id))
            }
        }



    }
}
